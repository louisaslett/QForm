% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QBounds.R
\name{QBounds}
\alias{QBounds}
\title{Bounds the CDF of Quadratic Forms}
\usage{
QBounds(cdf, f = "identity", max.eta, sum.eta, sum.etasq,
  sum.eta.deltasq = 0, sum.etasq.deltasq = 0)
}
\arguments{
\item{cdf}{function; the cdf of \eqn{T_f} returned by \code{QForm::QForm}}

\item{f}{character or QFormFunction object; the function \eqn{f} for the \eqn{Q_f} of interest.}

\item{max.eta}{vector; element-wise upper bound on the absolute value of the \eqn{\eta_i} in \eqn{R_f} (see Details)}

\item{sum.eta}{vector; element-wise sum of the \eqn{\eta_i} in \eqn{R_f} (see Details)}

\item{sum.etasq}{vector; element-wise sum of the \eqn{\eta^2_i} in \eqn{R_f} (see Details)}

\item{sum.eta.deltasq}{vector; element-wise sum of the \eqn{\eta_i \delta^2_i} in \eqn{R_f} (see Details)}

\item{sum.etasq.deltasq}{vector; element-wise sum of the \eqn{\eta^2_i \delta^2_i} in \eqn{R_f} (see Details)}
}
\value{
A function which evaluates upper and lower bounds on the CDF of \eqn{Q_f}.
}
\description{
Returns upper and lower bounds on the CDF for random variables \eqn{Q_f = T_f + R_f} where \deqn{T_f = \sum\limits_{i \in \mathcal{T}} f\left(\eta_i \right) \left(Z_i + \delta_i)^2, \ \ \ \ R_f = \sum\limits_{i \in \mathcal{R}} f\left(\eta_i \right) \left(Z_i + \delta_i)^2}{T_f = \Sigma_{i \in T} f (\eta_i) (Z_i + \delta_i)^2,     R_f = \Sigma_{i \in R} f (\eta_i) (Z_i + \delta_i)^2,} \eqn{Z_i \sim N(0,1)}{Z_i ~ N(0,1)}, and only the CDF of \eqn{T_f} is known.
}
\details{
Currently only \eqn{f = "identity"} is supported, but future versions will allow one to select \eqn{f} from a list or specify their own function with it's corresponding bounds through a QFormFunction object.

For a given input vector \code{x}, the returned function outputs a data frame with three variables, "x", "lower", and "upper", with each row providing the lower and upper bounds on the CDF at the given \code{x}.
The returned function has two optional, logical arguments.  \code{lower.tail} returns 1 minus the bounds when \code{TRUE} (not used if \code{density}==TRUE) and is highly recommended for those interested in the upper tail of \eqn{Q_f}.  \code{log.p} returns the desired bounds in log space.
}
\examples{
x <- seq(-100,100)
cdf <- QForm(c(-12,-7,1,1,3,10))

bounds <- QBounds(cdf,"identity",10,1,100)
y <- bounds(x)

plot(x,cdf(x))
plot(x,y$lower,col="blue",lty=2)
plot(x,y$upper,col="red",lty=2)


}
