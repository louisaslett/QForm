% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QFGaussBounds.R
\name{QFGaussBounds}
\alias{QFGaussBounds}
\title{Bounds on the CDF of a Quadratic Form in Gaussians}
\usage{
QFGaussBounds(cdf, f = "identity", max.abs.eta, sum.eta, sum.etasq,
  sum.eta.deltasq = 0, sum.etasq.deltasq = 0)
}
\arguments{
\item{cdf}{function; the cdf of \eqn{T_f} returned by \code{QForm::QForm}}

\item{f}{character or QFormFunction object; the function \eqn{f} for the \eqn{Q_f} of interest.}

\item{max.abs.eta}{vector; element-wise upper bound on the absolute value of the \eqn{\eta_i} in \eqn{R_f} (see Details)}

\item{sum.eta}{vector; element-wise sum of the \eqn{\eta_i} in \eqn{R_f} (see Details)}

\item{sum.etasq}{vector; element-wise sum of the \eqn{\eta^2_i} in \eqn{R_f} (see Details)}

\item{sum.eta.deltasq}{vector; element-wise sum of the \eqn{\eta_i \delta^2_i} in \eqn{R_f} (see Details)}

\item{sum.etasq.deltasq}{vector; element-wise sum of the \eqn{\eta^2_i \delta^2_i} in \eqn{R_f} (see Details)}
}
\value{
A non-vectorized function which evaluates upper and lower bounds on the CDF of \eqn{Q_f}.
}
\description{
Returns upper and lower bounds on the CDF for random variables \eqn{Q_f = T_f + R_f} where \deqn{T_f = \sum\limits_{i \in \mathcal{T}} f\left(\eta_i \right) \left(Z_i + \delta_i)^2, \ \ \ \ R_f = \sum\limits_{i \in \mathcal{R}} f\left(\eta_i \right) \left(Z_i + \delta_i)^2}{T_f = \Sigma_{i \in T} f (\eta_i) (Z_i + \delta_i)^2,     R_f = \Sigma_{i \in R} f (\eta_i) (Z_i + \delta_i)^2,} \eqn{Z_i \sim N(0,1)}{Z_i ~ N(0,1)}, and only the CDF of \eqn{T_f} is known.
}
\details{
Currently only \eqn{f = "identity"} is supported, but future versions will allow one to select \eqn{f} from a list or specify their own function with it's corresponding bounds through a QFormFunction object.

For a given input \code{q}, the returned function outputs a vector with the lower bound on the CDF at \code{q} as the first entry; the upper bound, as the second.  If \code{q} is not known exactly, but only a lower bound \code{ql} and an upper bound \code{qu} are known, then those may provided instead of \code{q} and the returned bounds on the CDF will be valid for an \code{q} in \code{[ql,qu]}.  If \code{q} is provided, \code{ql} and \code{qu} are ignored.

The returned function has two optional, logical arguments.  \code{lower.tail} returns 1 minus the bounds when \code{TRUE} (not used if \code{density}==TRUE) and is highly recommended for those interested in the upper tail of \eqn{Q_f}.  \code{log.p} returns the desired bounds in log space.
}
\examples{

cdf <- QFGauss(c(-12, -7, 1, 1, 3, 10, 14))

x <- seq(-150, 150, len = 1e3)

bounds <- QFGaussBounds(cdf = cdf, f = "identity",
                        max.abs.eta = 10, sum.eta = 1, sum.etasq = 100)

xx <- seq(-150, 150, len = 8)
## This may take 5 - 10 secs.
y <- as.data.frame(t(mapply(bounds, ql = xx-1, qu = xx+1)))

plot(x, cdf(x), type = "l")
points(xx, y$lower, col = "blue"); lines(xx, y$lower, col="blue", lty = 2)
points(xx, y$upper, col = "red"); lines(xx, y$upper, col = "red", lty = 2)

}
